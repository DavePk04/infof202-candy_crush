#include "Board.hpp"
using namespace std;

void print_board(int** data)
{
    for (int x = 0; x < 9; x++)
    {
        for (int y = 0; y < 9; y++)
        {
            printf(" %d", data[x][y]);       
        }
        printf("\n");
    }
    
}

Board::Board() {
    for (int i = 0; i < ROW; i++)
    {   
        board[i] = new int[ROW];
        for (int j = 0; j <= COL; j++)
        {
            board[i][j] = rand()%TOTALCOLOR + 1;  //Generate number between 1 to 6
        } 
    }  
}


int** Board::getBoard() {
    return board;
}

bool Board::is_inBoard(Point pos) { 
    return (0 <= pos.x and pos.x < ROW && 0 <= pos.y && pos.y < COL); 
}


/**
* Check if the wanted swap create alignment of identical candies
*/
bool Board::is_validSwap(Point ori, Point target) { 
    int Hcount = 1;
    int Vcount = 1; 
    aligned_candies_H.push_back(target);
    aligned_candies_V.push_back(target);
    int targetNbr = board[target.x][target.y];
    int j = 0;
    for (auto &i: DIR){
        Point new_target = target + i;
        while (new_target.x > 0 && new_target.y > 0 && new_target.x < COL && new_target.y < COL && board[new_target.x][new_target.y] == targetNbr && Vcount <= MIN_CANDIES_ALIGNED && Hcount <= MIN_CANDIES_ALIGNED)
        {
            if (i.x==0) {  // DIR verticales
                aligned_candies_V.push_back(new_target);
                Vcount++;
            }
            else{
                aligned_candies_H.push_back(new_target);
                Hcount++;
            }  
            new_target = new_target + i;   
        }
        j++;
    }
    return !(ori == target) && (Vcount >= MIN_CANDIES_ALIGNED || Hcount >= MIN_CANDIES_ALIGNED);  // none swap between two candies with same color
}


/**
* method called when a swap is done 
*/
void Board::swap(Point ori, Point target) {
    int nbr = board[target.x][target.y];
    board[target.x][target.y] = board[ori.x][ori.y];
    board[ori.x][ori.y] = nbr;

    if (!is_validSwap(ori, target))
    {
        int nbr2 = board[ori.x][ori.y];
        board[ori.x][ori.y] = board[target.x][target.y];
        board[target.x][target.y] = nbr;
    }
    
    print_board(board);
    delete_candies(aligned_candies_H);
    delete_candies(aligned_candies_V);
    printf("-----------\n");
    print_board(board);
}

/**
* reorganization upwards
*/
void Board::swim(Point p){
    int x = p.x;
    int y = p.y;
    board[x][y] = CANDY_DELETED;    // replace deleted candy by random candy (=rand()%TOTALCOLOR + 1)
    int i=x-1;
    while (i >= 0 && x >= 0){
        int nbr = board[x][y];
        board[x][y] = board[i][y];
        board[i][y] = nbr;
        i--;
        x--;
    }
}

void Board::delete_candies(vector<Point> targets){
    if (targets.size() >= MIN_CANDIES_ALIGNED)
    {
        for(auto &t:targets)
            swim(t);
    }
}

int main(){
    Board bd;
    int** board = bd.getBoard();
    print_board(board);
    printf("-----------\n");
    // bd.swap(Point{4,1}, Point{5,1});
    // bd.swap(Point{2,7}, Point{3,7});
    // bd.swap(Point{4,4}, Point{4,5});
    // bd.swap(Point{1,0}, Point{1,1});
    //bd.swap(Point{7,0}, Point{8,0});
    //bd.swap(Point{2,6}, Point{3,6});
    // bd.swap(Point{8,8}, Point{8,7});
    // vector<Point> vector1 = {Point{8,0}, Point{8,1}, Point{8,2}};
    // vector<Point> vector2 = {Point{3,6}, Point{4,6}, Point{5,6}};
    // bd.delete_candies(vector2);
    // printf("-----------\n");
    // print_board(board);
}
















































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































































